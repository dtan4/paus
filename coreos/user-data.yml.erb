#cloud-config

coreos:
  update:
    group: beta
    reboot-strategy: off
  # etcd:
  #   # generate a new token for each unique cluster from https://discovery.etcd.io/new
  #   # WARNING: replace each time you 'vagrant destroy'
  #   #discovery: https://discovery.etcd.io/<token>
  #   addr: $public_ipv4:4001
  #   peer-addr: $public_ipv4:7001
  # etcd2:
  #   #generate a new token for each unique cluster from https://discovery.etcd.io/new
  #   #discovery: https://discovery.etcd.io/<token>
  #   # multi-region and multi-cloud deployments need to use $public_ipv4
  #   advertise-client-urls: http://$public_ipv4:2379
  #   initial-advertise-peer-urls: http://$private_ipv4:2380
  #   # listen on both the official ports and the legacy ports
  #   # legacy ports can be omitted if your application doesn't depend on them
  #   listen-client-urls: http://0.0.0.0:2379,http://0.0.0.0:4001
  #   listen-peer-urls: http://$private_ipv4:2380,http://$private_ipv4:7001
  # fleet:
  #   public-ip: $public_ipv4
  # flannel:
  #   interface: $public_ipv4
  units:
    # - name: etcd.service
    #   command: start
    # # To use etcd2, comment out the above service and uncomment these
    # # Note: this requires a release that contains etcd2
    # #- name: etcd2.service
    # #  command: start
    # - name: fleet.service
    #   command: start
    - name: settimezone.service
      command: start
      content: |
        [Unit]
        Description=Set the timezone

        [Service]
        ExecStart=/usr/bin/timedatectl set-timezone <%= ENV["TIMEZONE"] %>
        RemainAfterExit=yes
        Type=oneshot
    - name: docker-tcp.socket
      command: start
      enable: true
      content: |
        [Unit]
        Description=Docker Socket for the API

        [Socket]
        ListenStream=2375
        Service=docker.service
        BindIPv6Only=both

        [Install]
        WantedBy=sockets.target
    # # Launch application as Docker container.
    # # Please replace `awesome` to your app (or Docker image) name.
    # - name: awesome.service
    #   command: start
    #   enable: true
    #   content: |
    #     [Unit]
    #     Description=Awesome app
    #     After=docker.service
    #     Requires=docker.service

    #     [Service]
    #     TimeoutStartSec=0
    #     User=core
    #     ExecStartPre=-/usr/bin/docker kill awesome
    #     ExecStartPre=-/usr/bin/docker rm awesome
    #     ExecStartPre=/usr/bin/docker pull quay.io/wantedly/awesome:latest
    #     ExecStart=/usr/bin/docker run --name awesome -p 8080:8080 -e FOO=bar quay.io/wantedly/awesome:latest
    #     ExecStop=/usr/bin/docker stop awesome

    #     [Install]
    #     WantedBy=multi-user.target
write_files:
  - path: /etc/ssh/sshd_config
    permissions: "0600"
    owner: root:root
    content: |
      # Use most defaults for sshd configuration.
      UsePrivilegeSeparation sandbox
      Subsystem sftp internal-sftp

      PermitRootLogin no
      PasswordAuthentication no
      ChallengeResponseAuthentication no
  - path: /etc/ntp.conf
    content: |
      # Common pool
      server 0.pool.ntp.org
      server 1.pool.ntp.org
      server 2.pool.ntp.org
      server 3.pool.ntp.org

      # - Allow only time queries, at a limited rate.
      # - Allow all local queries (IPv4, IPv6)
      restrict default nomodify nopeer noquery limited kod
      restrict 127.0.0.1
      restrict [::1]
